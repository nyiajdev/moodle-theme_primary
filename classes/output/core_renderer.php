<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * Override core renderers.
 *
 * @package    theme_primary
 * @copyright  2020 NYIAJ LLC
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

namespace theme_primary\output;

use coding_exception;
use context_system;
use dml_exception;
use moodle_exception;

defined('MOODLE_INTERNAL') || die;

/**
 * Renderers to align Moodle's HTML with that expected by Bootstrap
 *
 * @package    theme_primary
 * @copyright  2020 NYIAJ LLC
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
class core_renderer extends \core_renderer {

    /**
     * Returns a search box.
     *
     * @param bool $id The search box wrapper div id, defaults to an autogenerated one.
     * @return string         HTML with the search form hidden by default.
     * @throws coding_exception
     * @throws dml_exception
     * @throws moodle_exception
     */
    public function search_box($id = false) {
        global $CFG;

        // Accessing $CFG directly as using \core_search::is_global_search_enabled would
        // result in an extra included file for each site, even the ones where global search
        // is disabled.
        if (empty($CFG->enableglobalsearch) || !has_capability('moodle/search:query', context_system::instance())) {
            return '';
        }

        if ($id == false) {
            $id = uniqid();
        } else {
            // Needs to be cleaned, we use it for the input id.
            $id = clean_param($id, PARAM_ALPHANUMEXT);
        }

        return $this->render_from_template('theme_primary/search_box', [
            'id' => $id,
            'action' => new \moodle_url('/search/index.php')
        ]);
    }

    public function user_panel() {
        global $USER, $PAGE;

        if (!$USER->id) {
            return '';
        }

        $USER->fullname = fullname($USER);

        $userpicture = new \user_picture($USER);

        if ($coursecontext = $PAGE->context->get_course_context(false)) {
            $profileurl = new \moodle_url('/user/view.php',
                ['id' => $USER->id, 'course' => $coursecontext->instanceid]);
        } else {
            $profileurl = new \moodle_url('/user/profile.php', ['id' => $USER->id]);
        }

        return $this->render_from_template('theme_primary/user_panel', [
            'userpictureurl' => $userpicture->get_url($PAGE),
            'userprofileurl' => $profileurl,
            'user' => $USER
        ]);
    }
}
