{"version":3,"sources":["../src/TodoList.js"],"names":["DATA_KEY","JQUERY_NO_CONFLICT","$","fn","SELECTOR_DATA_TOGGLE","CLASS_NAME_TODO_LIST_DONE","Default","onCheck","item","onUnCheck","TodoList","element","config","_config","_element","_init","parents","toggleClass","prop","unCheck","check","call","$toggleSelector","find","on","event","toggle","target","each","data","_options","extend","window","_jQueryInterface","Constructor","noConflict"],"mappings":"mJAOA,uD,oUAQMA,CAAAA,CAAQ,CAAG,c,CACXC,CAAkB,CAAGC,UAAEC,EAAF,S,CAErBC,CAAoB,CAAG,6B,CACvBC,CAAyB,CAAG,M,CAE5BC,CAAO,CAAG,CACdC,OADc,kBACNC,CADM,CACA,CACZ,MAAOA,CAAAA,CACR,CAHa,CAIdC,SAJc,oBAIJD,CAJI,CAIE,CACd,MAAOA,CAAAA,CACR,CANa,C,CAcVE,C,YACJ,WAAYC,CAAZ,CAAqBC,CAArB,CAA6B,WAC3B,KAAKC,OAAL,CAAeD,CAAf,CACA,KAAKE,QAAL,CAAgBH,CAAhB,CAEA,KAAKI,KAAL,EACD,C,yCAIMP,C,CAAM,CACXA,CAAI,CAACQ,OAAL,CAAa,IAAb,EAAmBC,WAAnB,CAA+BZ,CAA/B,EACA,GAAI,CAAC,cAAEG,CAAF,EAAQU,IAAR,CAAa,SAAb,CAAL,CAA8B,CAC5B,KAAKC,OAAL,CAAa,cAAEX,CAAF,CAAb,EACA,MACD,CAED,KAAKY,KAAL,CAAWZ,CAAX,CACD,C,oCAEKA,C,CAAM,CACV,KAAKK,OAAL,CAAaN,OAAb,CAAqBc,IAArB,CAA0Bb,CAA1B,CACD,C,wCAEOA,C,CAAM,CACZ,KAAKK,OAAL,CAAaJ,SAAb,CAAuBY,IAAvB,CAA4Bb,CAA5B,CACD,C,qCAIO,YACAc,CAAe,CAAG,cAAElB,CAAF,CADlB,CAGNkB,CAAe,CAACC,IAAhB,CAAqB,wBAArB,EAA+CP,OAA/C,CAAuD,IAAvD,EAA6DC,WAA7D,CAAyEZ,CAAzE,EACAiB,CAAe,CAACE,EAAhB,CAAmB,QAAnB,CAA6B,gBAA7B,CAA+C,SAAAC,CAAK,CAAI,CACtD,CAAI,CAACC,MAAL,CAAY,cAAED,CAAK,CAACE,MAAR,CAAZ,CACD,CAFD,CAGD,C,4DAIuBf,C,CAAQ,CAC9B,MAAO,MAAKgB,IAAL,CAAU,UAAY,IACvBC,CAAAA,CAAI,CAAG,cAAE,IAAF,EAAQA,IAAR,CAAa7B,CAAb,CADgB,CAErB8B,CAAQ,CAAG5B,UAAE6B,MAAF,CAAS,EAAT,CAAazB,CAAb,CAAsB,cAAE,IAAF,EAAQuB,IAAR,EAAtB,CAFU,CAI3B,GAAI,CAACA,CAAL,CAAW,CACTA,CAAI,CAAG,GAAInB,CAAAA,CAAJ,CAAa,cAAE,IAAF,CAAb,CAAsBoB,CAAtB,CAAP,CACA,cAAE,IAAF,EAAQD,IAAR,CAAa7B,CAAb,CAAuB6B,CAAvB,CACD,CAED,GAAe,MAAX,GAAAjB,CAAJ,CAAuB,CACrBiB,CAAI,CAACjB,CAAD,CAAJ,EACD,CACF,CAZM,CAaR,C,gBAQH,cAAEoB,MAAF,EAAUR,EAAV,CAAa,MAAb,CAAqB,UAAM,CACzBd,CAAQ,CAACuB,gBAAT,CAA0BZ,IAA1B,CAA+B,cAAEjB,CAAF,CAA/B,CACD,CAFD,EASAF,UAAEC,EAAF,UAAaO,CAAQ,CAACuB,gBAAtB,CACA/B,UAAEC,EAAF,UAAW+B,WAAX,CAAyBxB,CAAzB,CACAR,UAAEC,EAAF,UAAWgC,UAAX,CAAwB,UAAY,CAClCjC,UAAEC,EAAF,UAAaF,CAAb,CACA,MAAOS,CAAAA,CAAQ,CAACuB,gBACjB,CAHD,C,UAKevB,C","sourcesContent":["/**\n * --------------------------------------------\n * AdminLTE TodoList.js\n * License MIT\n * --------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * Constants\n * ====================================================\n */\n\nconst NAME = 'TodoList'\nconst DATA_KEY = 'lte.todolist'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst SELECTOR_DATA_TOGGLE = '[data-widget=\"todo-list\"]'\nconst CLASS_NAME_TODO_LIST_DONE = 'done'\n\nconst Default = {\n  onCheck(item) {\n    return item\n  },\n  onUnCheck(item) {\n    return item\n  }\n}\n\n/**\n * Class Definition\n * ====================================================\n */\n\nclass TodoList {\n  constructor(element, config) {\n    this._config = config\n    this._element = element\n\n    this._init()\n  }\n\n  // Public\n\n  toggle(item) {\n    item.parents('li').toggleClass(CLASS_NAME_TODO_LIST_DONE)\n    if (!$(item).prop('checked')) {\n      this.unCheck($(item))\n      return\n    }\n\n    this.check(item)\n  }\n\n  check(item) {\n    this._config.onCheck.call(item)\n  }\n\n  unCheck(item) {\n    this._config.onUnCheck.call(item)\n  }\n\n  // Private\n\n  _init() {\n    const $toggleSelector = $(SELECTOR_DATA_TOGGLE)\n\n    $toggleSelector.find('input:checkbox:checked').parents('li').toggleClass(CLASS_NAME_TODO_LIST_DONE)\n    $toggleSelector.on('change', 'input:checkbox', event => {\n      this.toggle($(event.target))\n    })\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      const _options = $.extend({}, Default, $(this).data())\n\n      if (!data) {\n        data = new TodoList($(this), _options)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (config === 'init') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API\n * ====================================================\n */\n\n$(window).on('load', () => {\n  TodoList._jQueryInterface.call($(SELECTOR_DATA_TOGGLE))\n})\n\n/**\n * jQuery API\n * ====================================================\n */\n\n$.fn[NAME] = TodoList._jQueryInterface\n$.fn[NAME].Constructor = TodoList\n$.fn[NAME].noConflict = function () {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return TodoList._jQueryInterface\n}\n\nexport default TodoList\n"],"file":"TodoList.min.js"}