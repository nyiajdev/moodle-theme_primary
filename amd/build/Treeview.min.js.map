{"version":3,"sources":["../src/Treeview.js"],"names":["DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","$","fn","EVENT_EXPANDED","EVENT_COLLAPSED","EVENT_LOAD_DATA_API","SELECTOR_LI","SELECTOR_TREEVIEW_MENU","SELECTOR_OPEN","SELECTOR_DATA_WIDGET","CLASS_NAME_OPEN","CLASS_NAME_IS_OPENING","Default","trigger","animationSpeed","accordion","expandSidebar","sidebarButtonSelector","Treeview","element","config","_config","_element","css","_setupListeners","treeviewMenu","parentLi","expandedEvent","Event","openMenuLi","siblings","first","openTreeview","find","collapse","addClass","stop","slideDown","_expandSidebar","collapsedEvent","removeClass","slideUp","event","$relativeTarget","currentTarget","$parent","parent","is","preventDefault","parents","isOpen","hasClass","expand","document","on","toggle","PushMenu","each","data","_options","extend","window","_jQueryInterface","call","Constructor","noConflict"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------\n * AdminLTE Treeview.js\n * License MIT\n * --------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * Constants\n * ====================================================\n */\n\nconst NAME = 'Treeview'\nconst DATA_KEY = 'lte.treeview'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst EVENT_EXPANDED = `expanded${EVENT_KEY}`\nconst EVENT_COLLAPSED = `collapsed${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}`\n\nconst SELECTOR_LI = '.nav-item'\nconst SELECTOR_LINK = '.nav-link'\nconst SELECTOR_TREEVIEW_MENU = '.nav-treeview'\nconst SELECTOR_OPEN = '.menu-open'\nconst SELECTOR_DATA_WIDGET = '[data-widget=\"treeview\"]'\n\nconst CLASS_NAME_OPEN = 'menu-open'\nconst CLASS_NAME_IS_OPENING = 'menu-is-opening'\nconst CLASS_NAME_SIDEBAR_COLLAPSED = 'sidebar-collapse'\n\nconst Default = {\n  trigger: `${SELECTOR_DATA_WIDGET} ${SELECTOR_LINK}`,\n  animationSpeed: 300,\n  accordion: true,\n  expandSidebar: false,\n  sidebarButtonSelector: '[data-widget=\"pushmenu\"]'\n}\n\n/**\n * Class Definition\n * ====================================================\n */\nclass Treeview {\n  constructor(element, config) {\n    this._config = config\n    this._element = element\n  }\n\n  // Public\n\n  init() {\n    $(`${SELECTOR_LI}${SELECTOR_OPEN} ${SELECTOR_TREEVIEW_MENU}`).css('display', 'block')\n    this._setupListeners()\n  }\n\n  expand(treeviewMenu, parentLi) {\n    const expandedEvent = $.Event(EVENT_EXPANDED)\n\n    if (this._config.accordion) {\n      const openMenuLi = parentLi.siblings(SELECTOR_OPEN).first()\n      const openTreeview = openMenuLi.find(SELECTOR_TREEVIEW_MENU).first()\n      this.collapse(openTreeview, openMenuLi)\n    }\n\n    parentLi.addClass(CLASS_NAME_IS_OPENING)\n    treeviewMenu.stop().slideDown(this._config.animationSpeed, () => {\n      parentLi.addClass(CLASS_NAME_OPEN)\n      $(this._element).trigger(expandedEvent)\n    })\n\n    if (this._config.expandSidebar) {\n      this._expandSidebar()\n    }\n  }\n\n  collapse(treeviewMenu, parentLi) {\n    const collapsedEvent = $.Event(EVENT_COLLAPSED)\n\n    parentLi.removeClass(`${CLASS_NAME_IS_OPENING} ${CLASS_NAME_OPEN}`)\n    treeviewMenu.stop().slideUp(this._config.animationSpeed, () => {\n      $(this._element).trigger(collapsedEvent)\n      treeviewMenu.find(`${SELECTOR_OPEN} > ${SELECTOR_TREEVIEW_MENU}`).slideUp()\n      treeviewMenu.find(SELECTOR_OPEN).removeClass(CLASS_NAME_OPEN)\n    })\n  }\n\n  toggle(event) {\n    const $relativeTarget = $(event.currentTarget)\n    const $parent = $relativeTarget.parent()\n\n    let treeviewMenu = $parent.find(`> ${SELECTOR_TREEVIEW_MENU}`)\n\n    if (!treeviewMenu.is(SELECTOR_TREEVIEW_MENU)) {\n      if (!$parent.is(SELECTOR_LI)) {\n        treeviewMenu = $parent.parent().find(`> ${SELECTOR_TREEVIEW_MENU}`)\n      }\n\n      if (!treeviewMenu.is(SELECTOR_TREEVIEW_MENU)) {\n        return\n      }\n    }\n\n    event.preventDefault()\n\n    const parentLi = $relativeTarget.parents(SELECTOR_LI).first()\n    const isOpen = parentLi.hasClass(CLASS_NAME_OPEN)\n\n    if (isOpen) {\n      this.collapse($(treeviewMenu), parentLi)\n    } else {\n      this.expand($(treeviewMenu), parentLi)\n    }\n  }\n\n  // Private\n\n  _setupListeners() {\n    $(document).on('click', this._config.trigger, event => {\n      this.toggle(event)\n    })\n  }\n\n  _expandSidebar() {\n    if ($('body').hasClass(CLASS_NAME_SIDEBAR_COLLAPSED)) {\n      $(this._config.sidebarButtonSelector).PushMenu('expand')\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      const _options = $.extend({}, Default, $(this).data())\n\n      if (!data) {\n        data = new Treeview($(this), _options)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (config === 'init') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API\n * ====================================================\n */\n\n$(window).on(EVENT_LOAD_DATA_API, () => {\n  $(SELECTOR_DATA_WIDGET).each(function () {\n    Treeview._jQueryInterface.call($(this), 'init')\n  })\n})\n\n/**\n * jQuery API\n * ====================================================\n */\n\n$.fn[NAME] = Treeview._jQueryInterface\n$.fn[NAME].Constructor = Treeview\n$.fn[NAME].noConflict = function () {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Treeview._jQueryInterface\n}\n\nexport default Treeview\n"],"file":"Treeview.min.js"}